package com.codinghome.bibliouned.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Biblioteca generated by hbm2java
 */
@Entity
@Table(name = "biblioteca", catalog = "bibliouned")
public class Biblioteca implements java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private Long id;
	private String identificador;
	private String nombre;
	private String direccion;
	private Set<UsuarioExterno> usuarioexternos = new HashSet<>(0);
	private Set<Usuario> usuarios = new HashSet<>(0);

	public Biblioteca() {
	}

	public Biblioteca(String identificador, String nombre, String direccion,
			Set<UsuarioExterno> usuarioexternos, Set<Usuario> usuarios) {
		this.identificador = identificador;
		this.nombre = nombre;
		this.direccion = direccion;
		this.usuarioexternos = usuarioexternos;
		this.usuarios = usuarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "identificador", length = 45)
	public String getIdentificador() {
		return this.identificador;
	}

	public void setIdentificador(String identificador) {
		this.identificador = identificador;
	}

	@Column(name = "Nombre")
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Direccion")
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biblioteca")
	public Set<UsuarioExterno> getUsuarioexternos() {
		return this.usuarioexternos;
	}

	public void setUsuarioexternos(Set<UsuarioExterno> usuarioexternos) {
		this.usuarioexternos = usuarioexternos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biblioteca")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

}
